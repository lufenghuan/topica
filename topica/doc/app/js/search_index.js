var search_data = {"index":{"searchIndex":["api","v1","applicationcontroller","commentscontroller","commentshelper","feedscontroller","feedshelper","postscontroller","postshelper","sessionscontroller","sessionshelper","topicscontroller","topicshelper","userscontroller","usershelper","applicationcontroller","applicationhelper","comment","favor","feed","followship","post","topic","user","create()","create()","create()","create()","create()","destroy()","destroy()","destroy()","destroy()","destroy()","favored_posts()","following_topic()","index()","index()","index()","index()","index()","login()","logout()","ping()","show()","show()","show()","show()","show()","update()","update()","update()","update()","update()","readme"],"longSearchIndex":["api","api::v1","api::v1::applicationcontroller","api::v1::commentscontroller","api::v1::commentshelper","api::v1::feedscontroller","api::v1::feedshelper","api::v1::postscontroller","api::v1::postshelper","api::v1::sessionscontroller","api::v1::sessionshelper","api::v1::topicscontroller","api::v1::topicshelper","api::v1::userscontroller","api::v1::usershelper","applicationcontroller","applicationhelper","comment","favor","feed","followship","post","topic","user","api::v1::commentscontroller#create()","api::v1::feedscontroller#create()","api::v1::postscontroller#create()","api::v1::topicscontroller#create()","api::v1::userscontroller#create()","api::v1::commentscontroller#destroy()","api::v1::feedscontroller#destroy()","api::v1::postscontroller#destroy()","api::v1::topicscontroller#destroy()","api::v1::userscontroller#destroy()","user::favored_posts()","user::following_topic()","api::v1::commentscontroller#index()","api::v1::feedscontroller#index()","api::v1::postscontroller#index()","api::v1::topicscontroller#index()","api::v1::userscontroller#index()","api::v1::sessionscontroller#login()","api::v1::sessionscontroller#logout()","api::v1::applicationcontroller#ping()","api::v1::commentscontroller#show()","api::v1::feedscontroller#show()","api::v1::postscontroller#show()","api::v1::topicscontroller#show()","api::v1::userscontroller#show()","api::v1::commentscontroller#update()","api::v1::feedscontroller#update()","api::v1::postscontroller#update()","api::v1::topicscontroller#update()","api::v1::userscontroller#update()",""],"info":[["Api","","Api.html","",""],["Api::V1","","Api/V1.html","",""],["Api::V1::ApplicationController","","Api/V1/ApplicationController.html","","<p>The base class for all the api controllers.\n<p>Author &mdash; Yifan Ge\n\n"],["Api::V1::CommentsController","","Api/V1/CommentsController.html","","<p>Comment controller Basic GRUD implemented Comment is also defined as a\nnested resource of post and user, …\n"],["Api::V1::CommentsHelper","","Api/V1/CommentsHelper.html","",""],["Api::V1::FeedsController","","Api/V1/FeedsController.html","","<p>Feed controller Basic GRUD implemented Feed is also defined as a nested\nresource of user, so you can …\n"],["Api::V1::FeedsHelper","","Api/V1/FeedsHelper.html","",""],["Api::V1::PostsController","","Api/V1/PostsController.html","","<p>Post controller Basic GRUD implemented Post is also defined as a nested\nresource of user, so you can …\n"],["Api::V1::PostsHelper","","Api/V1/PostsHelper.html","",""],["Api::V1::SessionsController","","Api/V1/SessionsController.html","","<p>Session controller\n"],["Api::V1::SessionsHelper","","Api/V1/SessionsHelper.html","",""],["Api::V1::TopicsController","","Api/V1/TopicsController.html","","<p>Topic controller Basic GRUD implemented You have three ways to get to a\ntopic resource. 1) Directly via …\n"],["Api::V1::TopicsHelper","","Api/V1/TopicsHelper.html","",""],["Api::V1::UsersController","","Api/V1/UsersController.html","","<p>User controller Basic GRUD implemented\n"],["Api::V1::UsersHelper","","Api/V1/UsersHelper.html","",""],["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["Comment","","Comment.html","","<p>Comment model\n"],["Favor","","Favor.html","",""],["Feed","","Feed.html","",""],["Followship","","Followship.html","",""],["Post","","Post.html","",""],["Topic","","Topic.html","",""],["User","","User.html","",""],["create","Api::V1::CommentsController","Api/V1/CommentsController.html#method-i-create","()","<p>Create a new comment Params:\n<p>comment &mdash; Hash of the comment object to be created\n\n<p>POST /comments or POST /users/: …\n"],["create","Api::V1::FeedsController","Api/V1/FeedsController.html#method-i-create","()","<p>Create a new feed Params:\n<p>feed &mdash; Hash of the feed object to be created\n\n<p>POST /feeds or POST /users/:user_id/feeds …\n"],["create","Api::V1::PostsController","Api/V1/PostsController.html#method-i-create","()","<p>Create a new post Params:\n<p>post &mdash; Hash of the post object to be created\n\n<p>POST /posts or POST /users/:user_id/posts …\n"],["create","Api::V1::TopicsController","Api/V1/TopicsController.html#method-i-create","()","<p>Create a new topic Params:\n<p>topic &mdash; Hash of the topic object to be created\n\n<p>POST /topics or POST /users/:user_id/feeds/ …\n"],["create","Api::V1::UsersController","Api/V1/UsersController.html#method-i-create","()","<p>Create a new user Params:\n<p>user &mdash; Hash of the user object to be created\n\n<p>POST /users\n"],["destroy","Api::V1::CommentsController","Api/V1/CommentsController.html#method-i-destroy","()","<p>Destroy one comment by ID DELETE /comments/:comment_id or DELETE\n/uesrs/:user_id/comments/:comment_id …\n"],["destroy","Api::V1::FeedsController","Api/V1/FeedsController.html#method-i-destroy","()","<p>Destroy one feed by ID DELETE /feeds/:feed_id or DELETE\n/users/:user_id/feeds/:feed_id\n"],["destroy","Api::V1::PostsController","Api/V1/PostsController.html#method-i-destroy","()","<p>Destroy one post by ID DELETE /post/:post_id or DELETE\n/users/:user_id/posts/:post_id\n"],["destroy","Api::V1::TopicsController","Api/V1/TopicsController.html#method-i-destroy","()","<p>Destroy one topic by ID DELETE /topics/:topic_id or DELETE\n/users/:user_id/feeds/:feed_id/topics/:topic_id …\n"],["destroy","Api::V1::UsersController","Api/V1/UsersController.html#method-i-destroy","()","<p>Destroy one user by ID DELETE /users/:user_id\n"],["favored_posts","User","User.html#method-c-favored_posts","()",""],["following_topic","User","User.html#method-c-following_topic","()",""],["index","Api::V1::CommentsController","Api/V1/CommentsController.html#method-i-index","()","<p>Query for all the comments in descendent order GET /comments or GET\n/users/:user_id/posts/:post_id/comments …\n"],["index","Api::V1::FeedsController","Api/V1/FeedsController.html#method-i-index","()","<p>Query for all the feeds in descendent order GET /feeds or GET\n/users/:user_id/feeds\n"],["index","Api::V1::PostsController","Api/V1/PostsController.html#method-i-index","()","<p>Query for all the posts in descendent order GET /posts or GET\n/users/:user_id/posts\n"],["index","Api::V1::TopicsController","Api/V1/TopicsController.html#method-i-index","()","<p>Query for all the topics in descendent order GET /topics or GET\n/users/:user_id/feeds/:feed_id/topics …\n"],["index","Api::V1::UsersController","Api/V1/UsersController.html#method-i-index","()","<p>Query for all the users in descendent order GET /users\n"],["login","Api::V1::SessionsController","Api/V1/SessionsController.html#method-i-login","()","<p>User login, create a new session\n"],["logout","Api::V1::SessionsController","Api/V1/SessionsController.html#method-i-logout","()","<p>User logout, destroy the current session\n"],["ping","Api::V1::ApplicationController","Api/V1/ApplicationController.html#method-i-ping","()","<p>return the api version to the user\n"],["show","Api::V1::CommentsController","Api/V1/CommentsController.html#method-i-show","()","<p>Query for one comment by id Params:\n<p>id &mdash; comment id\n\n<p>GET /comments/:comment_id or GET /users/:user_id/posts/ …\n"],["show","Api::V1::FeedsController","Api/V1/FeedsController.html#method-i-show","()","<p>Query for one feed by id Params:\n<p>id &mdash; feed_id\n\n<p>GET /feeds/:feed_id or GET /users/:user_id/feeds/:feed_id\n"],["show","Api::V1::PostsController","Api/V1/PostsController.html#method-i-show","()","<p>Query for one post by id Params:\n<p>id &mdash; post_id\n\n<p>GET /posts/:post_id or GET /users/:user_id/posts/:post_id\n"],["show","Api::V1::TopicsController","Api/V1/TopicsController.html#method-i-show","()","<p>Query for one topic by id Params:\n<p>id &mdash; feed_id\n\n<p>GET /topics/:topic_id or GET /users/:user_id/feeds/:feed_id/topics/ …\n"],["show","Api::V1::UsersController","Api/V1/UsersController.html#method-i-show","()","<p>Query for one user by id Params:\n<p>id &mdash; user_id\n\n<p>GET /users/:user_id\n"],["update","Api::V1::CommentsController","Api/V1/CommentsController.html#method-i-update","()","<p>Update an existing comment Params:\n<p>id &mdash; Comment id\n<p>comment &mdash; Hash of the comment object to be created\n"],["update","Api::V1::FeedsController","Api/V1/FeedsController.html#method-i-update","()","<p>Update an existing feed Params:\n<p>id &mdash; Feed id\n<p>feed &mdash; Hash of the feed object to be created\n"],["update","Api::V1::PostsController","Api/V1/PostsController.html#method-i-update","()","<p>Update an existing post Params:\n<p>id &mdash; Post id\n<p>post &mdash; Hash of the post object to be created\n"],["update","Api::V1::TopicsController","Api/V1/TopicsController.html#method-i-update","()","<p>Update an existing topic Params:\n<p>id &mdash; Feed id\n<p>topic &mdash; Hash of the topic object to be created\n"],["update","Api::V1::UsersController","Api/V1/UsersController.html#method-i-update","()","<p>Update an existing user Params:\n<p>id &mdash; user id\n<p>user &mdash; Hash of the user object to be created\n"],["README","","README_rdoc.html","","<p>README\n<p>This README would normally document whatever steps are necessary to get the\napplication up and …\n"]]}}