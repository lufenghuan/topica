(function(){var a;a=angular.module("topicaApp",["ngRoute","ngSanitize","ngCookies","restangular","http-auth-interceptor","ui.bootstrap","ngAnimate","monospaced.elastic","angularMoment","ui-gravatar","md5","topicaApp.directives.pluspicker","topicaApp.directives.ngFocus","topicaApp.directives.newscard","topicaApp.filters.linebreak"]),a.config(["$routeProvider",function(a){return a.when("/",{templateUrl:"views/main.html",controller:"MainController"}).when("/login",{templateUrl:"views/login.html",controller:"LoginController"}).when("/signup",{templateUrl:"views/signup.html",controller:"SignupController"}).when("/profile",{templateUrl:"views/profile_topics.html",controller:"ProfileTopicsController"}).otherwise({redirectTo:"/"})}]),a.config(["RestangularProvider",function(a){return a.setBaseUrl("/api/v1")}]),a.constant("Configs",{apiRoot:"/api/v1"}),a.run(["$rootScope","$location","$http","Configs","authService","UserSession",function(a,b,c,d,e,f){return a.changeView=function(a){return b.path(a)},a.logout=function(){return c.get(d.apiRoot+"/logout"),f.destroySession(),b.path("/login")},a.$on("event:auth-loginRequired",function(){return b.path("/login")}),a.$on("event:auth-loginConfirmed",function(a,c){return f.setSession(c),b.path("/")})}])}).call(this),function(){var a;a=angular.module("topicaApp"),a.controller("MainController",["Restangular","$scope","$http","Configs","$location","$rootScope","UserSession",function(a,b,c,d,e,f,g){return b.user=g.getSession(),b.baseUrl=d.apiRoot,console.log(b.baseUrl)}])}.call(this),function(){var a;a=angular.module("topicaApp"),a.controller("LoginController",["Configs","$http","$scope","authService","UserSession",function(a,b,c,d,e){return c.credential={email:"",password:"",rememberMe:!1},c.submit=function(){return e.login(c.credential.email,c.credential.password,c.credential.rememberMe).then(function(a){var b;return b=a.data.user,d.loginConfirmed(b)},function(){return c.message="Invalid username or password."})}}])}.call(this),function(){var a;a=angular.module("topicaApp"),a.controller("SignupController",["Configs","$http","$scope","UserSession","authService",function(a,b,c,d,e){var f;return c.credential={},c.submittable=!1,f=!0,c.checkSubmittable=function(){return c.submittable=c.credential.email&&""!==c.credential.email&&c.credential.username&&""!==c.credential.username&&c.credential.password&&""!==c.credential.password&&c.credential.passwordConfirmation&&""!==c.credential.passwordConfirmaion,f=c.credential.password&&c.credential.passwordConfirmation!==c.credential.password?!1:!0,c.submittable&=f,c.message=f?"":"Password not match."},c.submit=function(){return b.post(a.apiRoot+"/signup",{email:c.credential.email,password:c.credential.password,password_confirmation:c.credential.passwordConfirmation,username:c.credential.username}).then(function(){return d.login(c.credential.email,c.credential.password).then(function(a){var b;return b=a.data.user,e.loginConfirmed(b)},function(){return c.message="Invalid username or password"})},function(a){return console.log(a),c.message=a.data.message})}}])}.call(this),function(){var a;a=angular.module("topicaApp"),a.controller("NavbarController",["$rootScope","UserSession","$scope",function(a,b,c){var d,e,f,g;return c.user=b.getSession(),f=!1,e=!1,g=!1,d=[{name:"user",text:"Users",icon:"user"},{name:"feed",text:"Feeds",icon:"folder"},{name:"topic",text:"Topics",icon:"comment-o"}],c.visibleItems=d,c.arrowClass=function(){return g?"fa-angle-double-left":"fa-angle-double-right"},c.selectMenuItem=function(a){return g?(c.visibleItems=d,g=!1):(c.visibleItems=[c.visibleItems[a]],g=!0)},c.toggleHotcornerMenu=function(){return e=!e},c.showMenuItem=function(a){return""===selectedMenuItem||selectedMenuItem===a},c.hotcornerIconClass=function(){return c.hoverHotcornerMenu||e?"hotcorner-selected":""},c.hotcornerMenuClass=function(){return e?"hotcorner-open-all":c.hoverHotcornerMenu?"hotcorner-open-all":c.hoverHotcornerIcon?"hotcorner-open-part":""}}])}.call(this),function(){var a;a=angular.module("topicaApp"),a.controller("NewPostController",["Restangular","$scope","Configs","UserSession","$http",function(a,b,c,d,e){return b.user=d.getSession(),b.baseUrl=c.apiRoot,b.newPost={},b.itemTemplate={user_id:b.user.id,topic_type:1},b.createNewPost=function(){return b.selectedTopicIds=_.map(_.filter(b.topics,"selected"),function(a){return a.id}),e.post(c.apiRoot+"/posts/",{title:b.newPost.title,content:b.newPost.content,topic_ids:b.selectedTopicIds}).then(function(a){var c;return c=angular.element(document.getElementById("main-view")).scope(),b.newPost=a.data,b.newPost.user=b.user,b.newPost.num_of_comments=0,b.newPost.topics=_.map(_.filter(b.topics,"selected"),function(a){return{id:a.id,name:a.text,topic_type:a.topic_type}}),c.posts.unshift(b.newPost),b.newPost={}}),b.edit=!1},b.addItem=function(a){return console.log(a)}}])}.call(this),function(){var a;a=angular.module("topicaApp"),a.controller("ProfileController",["Restangular","$scope","$location","UserSession",function(a,b,c,d){return b.user=d.getSession()}])}.call(this),function(){var a;a=angular.module("topicaApp.directives.pluspicker",[]),a.directive("pluspicker",["$document","$http",function(a,b){var c,d;return d=null,c=angular.noop,{restrict:"CA",scope:{items:"=",addItem:"&onAdd",remoteUrl:"@",itemTemplate:"&"},template:"<div ng-class=\"{'open': isOpen}\">\n  <div class='pluspicker-toggle pluspicker-box' ng-click=\"openMenu($event)\">\n    <span class='pluspicker-listitem' ng-repeat='item in selectedItems'>\n      <span class='pluspicker-listitem-content'>\n        <span class='pluspicker-listitem-text'>\n          {{item.text}}\n        </span>\n        <div class='pluspicker-close' ng-click='deselectItem({{item.id}}, $event)'>\n          <i class='fa fa-times-circle'></i>\n        </div>\n      </span>\n    </span>\n    <span class='pluspicker-input-area'>\n      <input type='text' class='pluspicker-input-area' placeholder='+ add topic' ng-model=\"input\">\n      </input>\n    </span>\n  </div>\n  <ul class='pluspicker-menu'>\n    <li class='pluspicker-menu-item' ng-repeat='item in items | filter: {selected: false} | filter: input' ng-click='selectItem({{item.id}}, $event)'>\n      <a>\n        {{item.text}}\n      </a>\n    </li>\n    <li class='pluspicker-menu-item pluspicker-menu-add' ng-click='newItem()' ng-show='!!input && isNew()'>\n      <a>\n        Add \"{{input}}\"\n      </a>\n    </li>\n  </ul>\n</div>",link:function(c){return b.get(c.remoteUrl).then(function(a){var b;return c.items=function(){var c,d,e,f;for(e=a.data,f=[],c=0,d=e.length;d>c;c++)b=e[c],f.push({id:b.id,text:b.name,selected:!1});return f}()}),c.selectedItems=[],c.isNew=function(){return!_.contains(_.map(c.items,function(a){return a.text}),c.input)},c.newItem=function(){var a;return a=c.itemTemplate(),a.name=c.input,b.post(c.remoteUrl,a).then(function(b){var d;return d={id:b.data.id,text:a.name,selected:!0},c.selectedItems.push(d),c.items.unshift(d)}),c.input="",c.addItem({item:c.input})},c.selectItem=function(a,b){var d;return d=_.find(c.items,function(b){return b.id===a}),d.selected=!0,c.selectedItems.push(d),b.preventDefault(),b.stopPropagation()},c.deselectItem=function(a,b){return _.find(c.items,function(b){return b.id===a}).selected=!1,c.selectedItems=c.selectedItems.filter(function(b){return b.id!==a}),b.preventDefault(),b.stopPropagation()},a.bind("click",function(){return c.$apply("isOpen = false"),c.$apply("input = ''")}),c.openMenu=function(a){return a.preventDefault(),a.stopPropagation(),c.isOpen=!0},c.$watch("$location.path",function(){return c.isOpen=!1,c.input=""})}}}])}.call(this),function(){var a;a=angular.module("topicaApp.directives.ngFocus",[]),a.directive("ngFocus",["$timeout",function(a){return{link:function(b,c,d){return b.$watch(d.ngFocus,function(b){return angular.isDefined(b)&&b?a(function(){return c[0].focus()}):void 0},!0),c.bind("blur",function(){return angular.isDefined(d.ngFocusLost)?b.$apply(d.ngFocusLost):void 0})}}}])}.call(this),function(){var a;a=angular.module("topicaApp.directives.newscard",[]),a.directive("newscard",["$http","Restangular",function(a,b){return{restrict:"CA",scope:{postUrl:"@",user:"="},templateUrl:"views/templates/newscard.html",link:function(c){var d,e;return c.newComment=[],d=[],e=[],a.get(c.postUrl).then(function(a){return c.posts=a.data}),c.toggleComments=function(a){return d[a]=!d[a],d[a]?b.one("posts",c.posts[a].id).getList("comments").then(function(b){return c.posts[a].comments=b,c.posts[a].comment_size!==b.length?c.posts[a].comment_size=b.length:void 0}):void 0},c.commentIsOpen=function(a){return!!d[a]},c.toggleNewComment=function(a){return e[a]=!e[a],e[a]?void 0:c.posts[a].newComment=""},c.newCommentIsOpen=function(a){return!!e[a]},c.submitComment=function(a){return b.one("posts",c.posts[a].id).all("comments").post({content:c.posts[a].newComment,user_id:c.user.id}).then(function(b){return c.posts[a].newComment="",b.user=c.user,c.posts[a].comments||(c.posts[a].comments=[]),c.posts[a].comments.push(b),c.posts[a].comment_size+=1})},c.commentLoseFocus=function(){return c.focusComment=!1}}}}])}.call(this),function(){var a;a=angular.module("topicaApp.filters.linebreak",[]),a.filter("linebreak",function(){return function(a){return a.replace(/\n/g,"<br/>")}})}.call(this),function(){var a;a=angular.module("topicaApp"),a.service("UserSession",["$http","Configs","authService","$cookies","$location",function(a,b,c,d,e){var f;return f=void 0,this.login=function(c,d,e){return a.post(b.apiRoot+"/login",{email:c,password:d,remember:e})},this.setSession=function(a){return f={},f.id=a.id,f.username=a.username,f.email=a.email,console.log(f.id),d.id=""+f.id,d.username=f.username,d.email=f.email},this.destroySession=function(){return f=void 0,delete d.uid,delete d.email,delete d.username},this.getSession=function(){return null!=f?f:null!=d.id?(f={},f.id=parseInt(d.id),f.username=d.username,f.email=d.email,f):(this.destroySession(),e.path("/login"),void 0)}}])}.call(this),function(){var a;a=angular.module("topicaApp"),a.controller("ProfileTopicsController",["Restangular","UserSession","$scope","Configs",function(a,b,c,d){return c.baseUrl=d.apiRoot,c.user=b.getSession(),a.one("users",c.user.id).all("detailed_topics").getList().then(function(a){return c.topics=a}),c.showPosts=function(b){return c.openningPostTopic=b===c.openningPostTopic?void 0:b,a.one("topics",b).all("posts").getList().then(function(a){return _.find(c.topics,function(a){return a.id===b}).posts=a})}}])}.call(this);